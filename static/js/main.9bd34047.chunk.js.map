{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","utils/searchHelper.ts","types/Filters.ts","components/TableSideFilters/TableSideFilters.tsx","types/ErrorClassStyles.ts","components/TableItem/TableItem.tsx","components/TablePersons/TablePersons.tsx","types/ErrorTypes.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["isActiveLink","isActive","cn","Navbar","className","role","to","App","HomePage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","FilterSex","FilterTableHeader","FilterAndSortParameters","CENTURIES","TableSideFilters","useSearchParams","searchParams","setSearchParams","query","get","sex","centuries","getAll","handleFilterCentury","val","includes","filter","selectedValue","keys","map","search","type","placeholder","onChange","e","params","setSearchWith","target","length","href","ErrorClassStyles","createLink","base","salt","toLowerCase","replace","TableItem","person","selectedUser","name","born","died","mother","father","motherName","fatherName","personLink","backgroundWarning","textDanger","TablePersons","persons","useState","filteredPersons","setFilteredPersons","personURL","useParams","Query","Centuries","Sex","sort","Sort","order","Order","useEffect","filtered","personBornAge","Math","ceil","p1","p2","localeCompare","sortParameter","ErrorTypes","PeoplePage","setPersons","noError","hasError","setHasError","isLoading","setIsLoading","getPeople","catch","error","finally","personsToRender","somebody","find","p","warning","NotFoundPage","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9bd34047.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst isActiveLink = (\n  { isActive }: { isActive: boolean },\n) => {\n  return cn(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n};\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={isActiveLink}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={isActiveLink}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","export enum FilterSex {\n  'All' = '',\n  'Male' = 'm',\n  'Female' = 'f',\n}\n\nexport enum FilterTableHeader {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nexport enum FilterAndSortParameters {\n  Sex = 'sex',\n  Query = 'query',\n  Centuries = 'centuries',\n  Sort = 'sort',\n  Order = 'order',\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { FilterSex } from '../../types/Filters';\n\nconst CENTURIES = [16, 17, 18, 19, 20];\n\nexport const TableSideFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  function setSearchWith(params: { [key: string]: string | string[] | null }) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  const handleFilterInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: e.target.value || null });\n  };\n\n  const handleFilterCentury = (val: number) => {\n    const value = `${val}`;\n\n    if (centuries.includes(value)) {\n      return centuries.filter(selectedValue => selectedValue !== value);\n    }\n\n    return [...centuries, value];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n\n        {(Object.keys(FilterSex) as Array<keyof typeof FilterSex>).map(key => (\n          <Link\n            key={key}\n            to={{\n              search: getSearchWith(searchParams, {\n                sex: FilterSex[key] || null,\n              }),\n            }}\n            className={cn(\n              { 'is-active': sex === FilterSex[key] },\n            )}\n          >\n            {key}\n          </Link>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleFilterInputChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map(value => (\n              <Link\n                key={value}\n                data-cy=\"century\"\n                className={cn(\n                  'button',\n                  'mr-1',\n                  { 'is-info': centuries.includes(`${value}`) },\n                )}\n                to={{\n                  search: getSearchWith(searchParams, {\n                    centuries: handleFilterCentury(value),\n                  }),\n                }}\n              >\n                {value}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={cn(\n                'button',\n                'is-success',\n                { 'is-outlined': !!centuries.length },\n              )}\n              to={{\n                search: getSearchWith(searchParams, {\n                  centuries: null,\n                }),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","export enum ErrorClassStyles {\n  'textDanger' = 'has-text-danger',\n  'backgroundWarning' = 'has-background-warning',\n}\n","import { Link, NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../../types/Person';\nimport { ErrorClassStyles } from '../../types/ErrorClassStyles';\n\ntype Props = {\n  person: Person;\n  selectedUser: string | undefined;\n};\n\nconst createLink = (base: string, salt: number) => {\n  return `${base.toLowerCase().replace(/\\s/g, '-')}-${salt}`;\n};\n\nexport const TableItem: React.FC<Props> = ({ person, selectedUser }) => {\n  const {\n    name, sex, born, died, mother, father, motherName, fatherName,\n  } = person;\n\n  const personLink = createLink(name, born);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn(\n        { [ErrorClassStyles.backgroundWarning]: personLink === selectedUser },\n      )}\n    >\n      <td>\n        <NavLink\n          to={`../${personLink}`}\n          className={cn(\n            { [ErrorClassStyles.textDanger]: sex === 'f' },\n          )}\n        >\n          {name}\n        </NavLink>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {!motherName && (\n          '-'\n        )}\n\n        {mother && (\n          <Link\n            to={`../${createLink(mother.name, mother.born)}`}\n            className={ErrorClassStyles.textDanger}\n          >\n            {mother.name}\n          </Link>\n        )}\n\n        {motherName && !mother && (\n          <>{motherName}</>\n        )}\n      </td>\n\n      <td>\n        {!fatherName && (\n          '-'\n        )}\n\n        {father && (\n          <Link to={`../${createLink(father.name, father.born)}`}>\n            {father.name}\n          </Link>\n        )}\n\n        {fatherName && !father && (\n          <>{fatherName}</>\n        )}\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable no-restricted-syntax */\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types/Person';\nimport { TableItem } from '../TableItem';\nimport { FilterTableHeader, FilterAndSortParameters } from '../../types/Filters';\nimport { getSearchWith } from '../../utils/searchHelper';\n\ntype Props = {\n  persons: Person[];\n};\n\nexport const TablePersons: React.FC<Props> = ({ persons }) => {\n  const [filteredPersons, setFilteredPersons] = useState<Person[]>(persons);\n  const { personURL } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get(FilterAndSortParameters.Query) || '';\n  const centuries = searchParams.getAll(FilterAndSortParameters.Centuries) || [];\n  const sex = searchParams.get(FilterAndSortParameters.Sex) || '';\n  const sort = searchParams.get(FilterAndSortParameters.Sort) || '';\n  const order = searchParams.get(FilterAndSortParameters.Order) || '';\n\n  const setSearch = (sortParameter: string): string => {\n    if (sort && order) {\n      const searchString = getSearchWith(searchParams, {\n        sort: null,\n        order: null,\n      });\n\n      return searchString;\n    }\n\n    if (!sort && !order) {\n      const searchString = getSearchWith(searchParams, {\n        sort: sortParameter,\n      });\n\n      return searchString;\n    }\n\n    if (sort && !order) {\n      const searchString = getSearchWith(searchParams, {\n        sort: sortParameter,\n        order: 'desc',\n      });\n\n      return searchString;\n    }\n\n    return '';\n  };\n\n  useEffect(() => {\n    let filtered: Person[] = [...persons];\n\n    if (query) {\n      filtered = filtered.filter(person => {\n        const { name, motherName, fatherName } = person;\n\n        if (query) {\n          return name.toLowerCase().includes(query)\n          || motherName?.toLowerCase().includes(query)\n          || fatherName?.toLowerCase().includes(query);\n        }\n\n        return true;\n      });\n    }\n\n    if (sex) {\n      filtered = filtered.filter(person => person.sex === sex);\n    }\n\n    if (centuries.length) {\n      filtered = filtered.filter(person => {\n        const personBornAge = `${Math.ceil(person.born / 100)}`;\n\n        return centuries.includes(personBornAge);\n      });\n    }\n\n    if (sort) {\n      filtered = filtered.sort((p1, p2) => {\n        if (sort === 'name' || sort === 'sex') {\n          return !order\n            ? p1[sort].localeCompare(p2[sort])\n            : p2[sort].localeCompare(p1[sort]);\n        }\n\n        if (sort === 'born' || sort === 'died') {\n          return !order\n            ? p1[sort] - p2[sort]\n            : p2[sort] - p1[sort];\n        }\n\n        return 0;\n      });\n    }\n\n    setFilteredPersons(filtered);\n  }, [searchParams]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {(Object.keys(FilterTableHeader) as Array<keyof typeof FilterTableHeader>).map(key => {\n            return (\n              <th key={key}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {key}\n                  <Link\n                    to={{\n                      search: setSearch(FilterTableHeader[key]),\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className={cn(\n                        'fas',\n                        {\n                          'fa-sort': sort !== FilterTableHeader[key],\n                          'fa-sort-up': sort === FilterTableHeader[key] && !order,\n                          'fa-sort-down': sort === FilterTableHeader[key] && order,\n                        },\n                      )}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n            );\n          })}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredPersons.map(person => (\n          <TableItem\n            key={`${person.name}-${person.born}`}\n            person={person}\n            selectedUser={personURL}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","export enum ErrorTypes {\n  'error' = 'Something went wrong',\n  'warning' = 'There are no people on the server',\n  'noError' = '',\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { getPeople } from '../api';\n\nimport { Loader } from '../components/Loader';\nimport { TableSideFilters } from '../components/TableSideFilters';\nimport { TablePersons } from '../components/TablePersons';\n\nimport { Person } from '../types/Person';\nimport { ErrorTypes } from '../types/ErrorTypes';\n\nexport const PeoplePage: React.FC = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState<ErrorTypes>(ErrorTypes.noError);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPersons)\n      .catch(() => setHasError(ErrorTypes.error))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const personsToRender = persons.map(somebody => {\n    const person = { ...somebody };\n\n    person.father = persons.find(p => p.name === somebody.fatherName);\n    person.mother = persons.find(p => p.name === somebody.motherName);\n\n    return person;\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!hasError && !isLoading && (\n              <TableSideFilters />\n            )}\n          </div>\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n              {hasError && !isLoading && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  { ErrorTypes.error }\n                </p>\n              )}\n              {!personsToRender.length && !hasError && !isLoading && (\n                <p data-cy=\"noPeopleMessage\">\n                  { ErrorTypes.warning }\n                </p>\n              )}\n              {!hasError && !isLoading && (\n                <TablePersons persons={personsToRender} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"..\" />} />\n        <Route path=\"people\">\n          <Route path=\":personURL?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}